version: 2.1

orbs:
  android: circleci/android@2.5.0

jobs:
  build:
    executor:
      name: android/android-machine
      resource-class: large
      tag: 2021.10.1

    steps:
      - checkout

      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y openjdk-17-jdk
            sudo update-alternatives --set java /usr/lib/jvm/java-17-openjdk-amd64/bin/java
            sudo update-alternatives --set javac /usr/lib/jvm/java-17-openjdk-amd64/bin/javac
            echo 'export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64/' >> ~/.circlerc

      - run:
          name: Grant execution permissions to Gradle wrapper
          command: chmod +x gradlew

      - run:
          name: Set up Android emulator
          command: |
            sdkmanager "system-images;android-30;google_apis;x86_64"
            echo no | avdmanager create avd -n test -k "system-images;android-30;google_apis;x86_64" -d pixel
            emulator -avd test -gpu swiftshader_indirect -no-audio &
            adb wait-for-device
            sleep 90
            until adb shell getprop sys.boot_completed | grep -m 1 '1'; do
              echo "Waiting for emulator to fully boot..."
              sleep 10
            done
            adb shell wm dismiss-keyguard

      - run:
          name: Run unit tests
          command: ./gradlew testDebugUnitTest

      - run:
          name: Generate JaCoCo report for unit tests
          command: ./gradlew jacocoTestReport

      - run:
          name: Run instrumented tests and gather coverage data
          command: |
            ./gradlew connectedDebugAndroidTest
            adb pull /sdcard/Android/data/com.picpay.desafio.android/files/coverage.ec app/build/outputs/code-coverage/connected/

      - run:
          name: Generate JaCoCo report for instrumented tests
          command: ./gradlew connectedDebugAndroidTestCoverage

      - store_test_results:
          path: app/build/test-results

      - store_artifacts:
          path: app/build/reports
          destination: reports

      - run:
          name: Build debug APK
          command: ./gradlew assembleDebug

      - store_artifacts:
          path: app/build/outputs/apk/debug
          destination: debugApk
